/* eslint-disable eslint-comments/no-unlimited-disable */
/* eslint-disable */
/* prettier-ignore */
// @ts-nocheck
// Generated by laravel-typescriptable
declare namespace App.Route {
  export type Name = 'any' | 'api.v1.auth.all.permissions' | 'api.v1.auth.all.roles' | 'api.v1.auth.create.token' | 'api.v1.auth.login' | 'api.v1.auth.logout' | 'api.v1.auth.revoke.token' | 'api.v1.auth.user' | 'api.v1.documents.classifications.export' | 'api.v1.documents.institutions.export' | 'api.v1.documents.letters.export' | 'api.v1.documents.letters.letter.download' | 'api.v1.user.export' | 'classifications.destroy' | 'classifications.index' | 'classifications.show' | 'classifications.store' | 'classifications.update' | 'institutions.destroy' | 'institutions.index' | 'institutions.show' | 'institutions.store' | 'institutions.update' | 'letters.destroy' | 'letters.index' | 'letters.show' | 'letters.store' | 'letters.update' | 'messaging.create' | 'messaging.destroy' | 'messaging.edit' | 'messaging.index' | 'messaging.show' | 'messaging.store' | 'sanctum.csrf-cookie' | 'user.create' | 'user.destroy' | 'user.edit' | 'user.index' | 'user.show' | 'user.store' | 'user.update';
  export type Path = '/api/csrf-cookie' | '/api/v1/auth/all-permissions' | '/api/v1/auth/all-roles' | '/api/v1/auth/create-token' | '/api/v1/auth/login' | '/api/v1/auth/logout' | '/api/v1/auth/revoke-token' | '/api/v1/auth/user' | '/api/v1/documents/classifications' | '/api/v1/documents/classifications/export' | '/api/v1/documents/classifications/{classification}' | '/api/v1/documents/institutions' | '/api/v1/documents/institutions/export' | '/api/v1/documents/institutions/{institution}' | '/api/v1/documents/letters' | '/api/v1/documents/letters/export' | '/api/v1/documents/letters/{letter}' | '/api/v1/documents/letters/{letter}/download' | '/api/v1/messaging' | '/api/v1/messaging/create' | '/api/v1/messaging/{messaging}' | '/api/v1/messaging/{messaging}/edit' | '/api/v1/user' | '/api/v1/user/create' | '/api/v1/user/export' | '/api/v1/user/{user}' | '/api/v1/user/{user}/edit' | '/{any?}';
  export interface Params {
    'sanctum.csrf-cookie': never
    'api.v1.auth.all.permissions': never
    'api.v1.auth.all.roles': never
    'api.v1.auth.create.token': never
    'api.v1.auth.login': never
    'api.v1.auth.logout': never
    'api.v1.auth.revoke.token': never
    'api.v1.auth.user': never
    'classifications.index': never
    'classifications.store': never
    'api.v1.documents.classifications.export': never
    'classifications.show': {
      'classification': App.Route.ParamType
    }
    'classifications.update': {
      'classification': App.Route.ParamType
    }
    'classifications.destroy': {
      'classification': App.Route.ParamType
    }
    'institutions.index': never
    'institutions.store': never
    'api.v1.documents.institutions.export': never
    'institutions.show': {
      'institution': App.Route.ParamType
    }
    'institutions.update': {
      'institution': App.Route.ParamType
    }
    'institutions.destroy': {
      'institution': App.Route.ParamType
    }
    'letters.index': never
    'letters.store': never
    'api.v1.documents.letters.export': never
    'letters.show': {
      'letter': App.Route.ParamType
    }
    'letters.update': {
      'letter': App.Route.ParamType
    }
    'letters.destroy': {
      'letter': App.Route.ParamType
    }
    'api.v1.documents.letters.letter.download': {
      'letter': App.Route.ParamType
    }
    'messaging.index': never
    'messaging.store': never
    'messaging.create': never
    'messaging.show': {
      'messaging': App.Route.ParamType
    }
    'messaging.destroy': {
      'messaging': App.Route.ParamType
    }
    'messaging.edit': {
      'messaging': App.Route.ParamType
    }
    'user.index': never
    'user.store': never
    'user.create': never
    'api.v1.user.export': never
    'user.show': {
      'user': App.Route.ParamType
    }
    'user.update': {
      'user': App.Route.ParamType
    }
    'user.destroy': {
      'user': App.Route.ParamType
    }
    'user.edit': {
      'user': App.Route.ParamType
    }
    'any': {
      'any': App.Route.ParamType
    }
  }

  export type Method = 'HEAD' | 'GET' | 'POST' | 'PUT' | 'PATCH' | 'DELETE'
  export type ParamType = string | number | boolean | undefined
  export interface Link { name: App.Route.Name; path: App.Route.Path; params?: App.Route.Params[App.Route.Name], methods: App.Route.Method[] }
  export interface RouteConfig<T extends App.Route.Name> {
    name: T
    params?: T extends keyof App.Route.Params ? App.Route.Params[T] : never
  }
}
