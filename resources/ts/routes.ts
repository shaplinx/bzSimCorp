/* eslint-disable eslint-comments/no-unlimited-disable */
/* eslint-disable */
/* prettier-ignore */
// @ts-nocheck
// Generated by laravel-typescriptable
const Routes: Record<App.Route.Name, App.Route.Link> = {
  'sanctum.csrf-cookie': {
    name: 'sanctum.csrf-cookie',
    path: '/api/csrf-cookie',
    params: undefined,
    methods: ['GET'],
  },
  'api.v1.auth.all.permissions': {
    name: 'api.v1.auth.all.permissions',
    path: '/api/v1/auth/all-permissions',
    params: undefined,
    methods: ['GET'],
  },
  'api.v1.auth.all.roles': {
    name: 'api.v1.auth.all.roles',
    path: '/api/v1/auth/all-roles',
    params: undefined,
    methods: ['GET'],
  },
  'api.v1.auth.create.token': {
    name: 'api.v1.auth.create.token',
    path: '/api/v1/auth/create-token',
    params: undefined,
    methods: ['POST'],
  },
  'api.v1.auth.login': {
    name: 'api.v1.auth.login',
    path: '/api/v1/auth/login',
    params: undefined,
    methods: ['POST'],
  },
  'api.v1.auth.logout': {
    name: 'api.v1.auth.logout',
    path: '/api/v1/auth/logout',
    params: undefined,
    methods: ['POST'],
  },
  'api.v1.auth.revoke.token': {
    name: 'api.v1.auth.revoke.token',
    path: '/api/v1/auth/revoke-token',
    params: undefined,
    methods: ['POST'],
  },
  'api.v1.auth.user': {
    name: 'api.v1.auth.user',
    path: '/api/v1/auth/user',
    params: undefined,
    methods: ['GET'],
  },
  'classifications.index': {
    name: 'classifications.index',
    path: '/api/v1/documents/classifications',
    params: undefined,
    methods: ['GET'],
  },
  'classifications.store': {
    name: 'classifications.store',
    path: '/api/v1/documents/classifications',
    params: undefined,
    methods: ['POST'],
  },
  'api.v1.documents.classifications.export': {
    name: 'api.v1.documents.classifications.export',
    path: '/api/v1/documents/classifications/export',
    params: undefined,
    methods: ['GET'],
  },
  'classifications.show': {
    name: 'classifications.show',
    path: '/api/v1/documents/classifications/{classification}',
    params: {
      classification: 'string',
    },
    methods: ['GET'],
  },
  'classifications.update': {
    name: 'classifications.update',
    path: '/api/v1/documents/classifications/{classification}',
    params: {
      classification: 'string',
    },
    methods: ['PUT', 'PATCH'],
  },
  'classifications.destroy': {
    name: 'classifications.destroy',
    path: '/api/v1/documents/classifications/{classification}',
    params: {
      classification: 'string',
    },
    methods: ['DELETE'],
  },
  'institutions.index': {
    name: 'institutions.index',
    path: '/api/v1/documents/institutions',
    params: undefined,
    methods: ['GET'],
  },
  'institutions.store': {
    name: 'institutions.store',
    path: '/api/v1/documents/institutions',
    params: undefined,
    methods: ['POST'],
  },
  'api.v1.documents.institutions.export': {
    name: 'api.v1.documents.institutions.export',
    path: '/api/v1/documents/institutions/export',
    params: undefined,
    methods: ['GET'],
  },
  'institutions.show': {
    name: 'institutions.show',
    path: '/api/v1/documents/institutions/{institution}',
    params: {
      institution: 'string',
    },
    methods: ['GET'],
  },
  'institutions.update': {
    name: 'institutions.update',
    path: '/api/v1/documents/institutions/{institution}',
    params: {
      institution: 'string',
    },
    methods: ['PUT', 'PATCH'],
  },
  'institutions.destroy': {
    name: 'institutions.destroy',
    path: '/api/v1/documents/institutions/{institution}',
    params: {
      institution: 'string',
    },
    methods: ['DELETE'],
  },
  'letters.index': {
    name: 'letters.index',
    path: '/api/v1/documents/letters',
    params: undefined,
    methods: ['GET'],
  },
  'letters.store': {
    name: 'letters.store',
    path: '/api/v1/documents/letters',
    params: undefined,
    methods: ['POST'],
  },
  'api.v1.documents.letters.export': {
    name: 'api.v1.documents.letters.export',
    path: '/api/v1/documents/letters/export',
    params: undefined,
    methods: ['GET'],
  },
  'letters.show': {
    name: 'letters.show',
    path: '/api/v1/documents/letters/{letter}',
    params: {
      letter: 'string',
    },
    methods: ['GET'],
  },
  'letters.update': {
    name: 'letters.update',
    path: '/api/v1/documents/letters/{letter}',
    params: {
      letter: 'string',
    },
    methods: ['PUT', 'PATCH'],
  },
  'letters.destroy': {
    name: 'letters.destroy',
    path: '/api/v1/documents/letters/{letter}',
    params: {
      letter: 'string',
    },
    methods: ['DELETE'],
  },
  'api.v1.documents.letters.letter.download': {
    name: 'api.v1.documents.letters.letter.download',
    path: '/api/v1/documents/letters/{letter}/download',
    params: {
      letter: 'string',
    },
    methods: ['GET'],
  },
  'messaging.index': {
    name: 'messaging.index',
    path: '/api/v1/messaging',
    params: undefined,
    methods: ['GET'],
  },
  'messaging.store': {
    name: 'messaging.store',
    path: '/api/v1/messaging',
    params: undefined,
    methods: ['POST'],
  },
  'messaging.create': {
    name: 'messaging.create',
    path: '/api/v1/messaging/create',
    params: undefined,
    methods: ['GET'],
  },
  'messaging.show': {
    name: 'messaging.show',
    path: '/api/v1/messaging/{messaging}',
    params: {
      messaging: 'string',
    },
    methods: ['GET'],
  },
  'messaging.destroy': {
    name: 'messaging.destroy',
    path: '/api/v1/messaging/{messaging}',
    params: {
      messaging: 'string',
    },
    methods: ['DELETE'],
  },
  'messaging.edit': {
    name: 'messaging.edit',
    path: '/api/v1/messaging/{messaging}/edit',
    params: {
      messaging: 'string',
    },
    methods: ['GET'],
  },
  'user.index': {
    name: 'user.index',
    path: '/api/v1/user',
    params: undefined,
    methods: ['GET'],
  },
  'user.store': {
    name: 'user.store',
    path: '/api/v1/user',
    params: undefined,
    methods: ['POST'],
  },
  'user.create': {
    name: 'user.create',
    path: '/api/v1/user/create',
    params: undefined,
    methods: ['GET'],
  },
  'api.v1.user.export': {
    name: 'api.v1.user.export',
    path: '/api/v1/user/export',
    params: undefined,
    methods: ['GET'],
  },
  'user.show': {
    name: 'user.show',
    path: '/api/v1/user/{user}',
    params: {
      user: 'string',
    },
    methods: ['GET'],
  },
  'user.update': {
    name: 'user.update',
    path: '/api/v1/user/{user}',
    params: {
      user: 'string',
    },
    methods: ['PUT', 'PATCH'],
  },
  'user.destroy': {
    name: 'user.destroy',
    path: '/api/v1/user/{user}',
    params: {
      user: 'string',
    },
    methods: ['DELETE'],
  },
  'user.edit': {
    name: 'user.edit',
    path: '/api/v1/user/{user}/edit',
    params: {
      user: 'string',
    },
    methods: ['GET'],
  },
  'any': {
    name: 'any',
    path: '/{any?}',
    params: {
      any: 'string',
    },
    methods: ['GET'],
  },
}

declare global {
  interface Window {
    Routes: Record<App.Route.Name, App.Route.Link>
  }
}

const appUrl = 'http://localhost:8000'

if (typeof window !== 'undefined') {
  window.Routes = Routes
}

export { Routes, appUrl }
